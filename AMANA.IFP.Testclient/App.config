<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <appSettings configSource="Config\appSettings.config" />
  <startup> 
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1" />
  </startup>
  <system.serviceModel>
    <extensions>
      <bindingElementExtensions>
        <add name="customTextMessageEncoding" type="AMANA.IFP.Data.CustomTextMessageBindingElementExtension, AMANA.IFP.Data" />
      </bindingElementExtensions>
    </extensions>
    <bindings>
      <customBinding>       
        <binding name="BilanzdatenELBASoapSecurityProfileStandardBinding">          
          <customTextMessageEncoding />          
          <security defaultAlgorithmSuite="Basic128Sha256" securityHeaderLayout="Lax" authenticationMode="MutualCertificate" messageProtectionOrder="SignBeforeEncrypt"
                    messageSecurityVersion="WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" enableUnsecuredResponse="true" includeTimestamp="false"
                    requireDerivedKeys="false" allowSerializedSigningTokenOnReply="true" requireSecurityContextCancellation="false" canRenewSecurityContextToken="false"
          >
            <localClientSettings detectReplays="false" />            
            <secureConversationBootstrap requireSignatureConfirmation="true" />            
          </security>
          <httpsTransport keepAliveEnabled="false" maxBufferPoolSize="2147483647" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647"   />
        </binding>
      </customBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="DifinTestServerSignatureCheckCertAuthBehavior">
          <clientCredentials>
            <!-- client cert will be set dynamically -->
            <serviceCertificate>
              <!-- For every Service Endpoint we need the public cert/key to compare the signing token to the certificate configured below -->
              <defaultCertificate findValue="BZ ProduktServiceBus - VPTest" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" />
              <authentication certificateValidationMode="None" revocationMode="NoCheck" />
            </serviceCertificate>
          </clientCredentials>          
        </behavior>
        <behavior name="NoSignatureCheckCertAuthBehavior">
          <clientCredentials>
            <!-- client cert will be set dynamically -->
            <serviceCertificate>
              <!-- with enableUnsecuredResponse (s. above) and a custom MessageEncoder which removes the security element from soap header, we can choose a dummy cert resp. the same as defined as client cert -->
              <defaultCertificate />
              <authentication certificateValidationMode="None" revocationMode="NoCheck" />
            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>

    <client>
      <endpoint name="BilanzdatenELBAPortTestCertSecurityProfileStandardEndpoint" 
          address="" binding="customBinding" bindingConfiguration="BilanzdatenELBASoapSecurityProfileStandardBinding"
          contract="Elba.BilanzdatenELBAPortType" behaviorConfiguration="NoSignatureCheckCertAuthBehavior"
      >        
      </endpoint>
    </client>

    <diagnostics>
      <messageLogging maxMessagesToLog="3000"
                      logEntireMessage="true"
                      logKnownPii="true"
                      logMessagesAtServiceLevel="true"
                      logMalformedMessages="true"
                      logMessagesAtTransportLevel="true"
                      maxSizeOfMessageToLog="2000000"
      >
        <filters>
          <clear/>
        </filters>
      </messageLogging>
    </diagnostics>
  </system.serviceModel>
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" logKnownPii="true">
        <listeners>
          <add name="messages"
               type="System.Diagnostics.XmlWriterTraceListener"
               initializeData="c:\Temp\wcfLogs\messages.svclog" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="xml"

           type="System.Diagnostics.XmlWriterTraceListener"

           initializeData="C:\Temp\wcfLogs\Server.svclog" />
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="AMANA.XBRL.Engine" publicKeyToken="eee0b4e0a74b6777" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.3.5.241" newVersion="2.3.5.241" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="XPath20Api" publicKeyToken="d006728aa1a8596e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.7.241.0" newVersion="1.7.241.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="AMANA.XBRL.Plugins" publicKeyToken="ee912463a15eb195" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.3.5.241" newVersion="2.3.5.241" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="AMANA.XBRL.Support" publicKeyToken="c505f608dcdb490e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.3.5.241" newVersion="2.3.5.241" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
